name: Rust

on:
  push:
    tags:
      - '*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macOS-latest
            target: x86_64-apple-darwin
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Set the version
      id: version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

    - name: Build
      run: cargo build --release --locked

    - name: Strip binary
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: strip target/release/qurl

    - name: Upload binaries to release (Linux/MacOS)
      uses: svenstaro/upload-release-action@v1-release
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/qurl
        asset_name: qurl-${{ steps.version.outputs.VERSION }}-${{ matrix.target }}
        tag: ${{ github.ref }}
    
    - name: Upload binaries to release (Windows)
      uses: svenstaro/upload-release-action@v1-release
      if: matrix.os == 'windows-latest'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/qurl.exe
        asset_name: qurl-${{ steps.version.outputs.VERSION }}-${{ matrix.target }}.exe
        tag: ${{ github.ref }}
